name: Tests

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres: [12, 13, 14, 15, 16]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install PostgreSQL ${{ matrix.postgres }}
      run: |
        # Add PostgreSQL APT repository
        sudo apt-get update
        sudo apt-get install -y wget ca-certificates
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        echo "deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
        
        # Update and install PostgreSQL
        sudo apt-get update
        sudo apt-get install -y postgresql-${{ matrix.postgres }} postgresql-server-dev-${{ matrix.postgres }} postgresql-client-${{ matrix.postgres }}
        
        # Start PostgreSQL
        sudo systemctl start postgresql
        sudo systemctl enable postgresql
        
        # Configure PostgreSQL
        sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'postgres';"
        sudo -u postgres createdb test_db
    
    - name: Install build dependencies
      run: |
        sudo apt-get install -y build-essential
    
    - name: Build extension
      run: |
        export PG_CONFIG=/usr/lib/postgresql/${{ matrix.postgres }}/bin/pg_config
        make clean
        make
    
    - name: Install extension
      run: |
        export PG_CONFIG=/usr/lib/postgresql/${{ matrix.postgres }}/bin/pg_config
        sudo make install
    
    - name: Run tests
      run: |
        export PG_CONFIG=/usr/lib/postgresql/${{ matrix.postgres }}/bin/pg_config
        make installcheck PGUSER=postgres PGDATABASE=test_db
      env:
        PGPASSWORD: postgres
    
    - name: Show test diff on failure
      if: failure()
      run: |
        if [ -f regression.diffs ]; then
          echo "=== Test failures ==="
          cat regression.diffs
        fi

  valgrind:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PostgreSQL with Valgrind
        uses: ankane/setup-postgres-valgrind@v1
        with:
          postgres-version: 17
          check-ub: yes
      
      - name: Build extension
        run: make OPTFLAGS=""
      
      - name: Install extension
        run: sudo --preserve-env=PG_CONFIG make install
      
      - name: Run tests with Valgrind
        run: make installcheck

  docker-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build and test with Docker Compose
      run: |
        docker compose up -d --build
        
        # Wait for PostgreSQL to be ready
        sleep 10

        docker compose exec postgres make installcheck
    - name: Cleanup
      if: always()
      run: docker compose down 