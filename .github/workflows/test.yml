name: Tests

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  ubuntu:
    runs-on: ${{ matrix.os }}
    if: ${{ !startsWith(github.ref_name, 'mac') && !startsWith(github.ref_name, 'windows') }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - postgres: 17
            os: ubuntu-24.04
          - postgres: 16
            os: ubuntu-24.04-arm
          - postgres: 15
            os: ubuntu-22.04
          - postgres: 14
            os: ubuntu-22.04-arm
          - postgres: 13
            os: ubuntu-22.04
          - postgres: 12
            os: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PostgreSQL ${{ matrix.postgres }}
        uses: ankane/setup-postgres@v1
        with:
          postgres-version: ${{ matrix.postgres }}
          dev-files: true
      
      - name: Build extension
        run: |
          export PG_CONFIG=`which pg_config`
          echo "Building with PG_CONFIG: $PG_CONFIG"
          make clean
          make PG_CONFIG="$PG_CONFIG"
        env:
          PG_CFLAGS: -DUSE_ASSERT_CHECKING -Wall -Wextra -Werror -Wno-unused-parameter -Wno-sign-compare
      
      - name: Install extension
        run: |
          export PG_CONFIG=`which pg_config`
          echo "Using PG_CONFIG: $PG_CONFIG"
          echo "PostgreSQL version: `pg_config --version`"
          echo "Extension directory: `pg_config --sharedir`/extension"
          echo "Library directory: `pg_config --pkglibdir`"
          echo "PGXS path: `$PG_CONFIG --pgxs`"
          echo "Debugging make variables:"
          make PG_CONFIG="$PG_CONFIG" -n install | head -10
          echo "Actually installing:"
          sudo make PG_CONFIG="$PG_CONFIG" install
          echo "Checking installed files:"
          ls -la `pg_config --sharedir`/extension/hashlib* || echo "No hashlib files found in extension directory"
          ls -la `pg_config --pkglibdir`/hashlib* || echo "No hashlib files found in library directory"
      
      - name: Run tests
        run: make installcheck
      
      - name: Show test diff on failure
        if: failure()
        run: cat regression.diffs

  valgrind:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup PostgreSQL with Valgrind
        uses: ankane/setup-postgres-valgrind@v1
        with:
          postgres-version: 17
          check-ub: yes
      
      - name: Build extension
        run: make OPTFLAGS=""
      
      - name: Install extension
        run: sudo --preserve-env=PG_CONFIG make install
      
      - name: Run tests with Valgrind
        run: make installcheck

  docker-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build and test with Docker Compose
      run: |
        docker compose up -d --build
        
        # Wait for PostgreSQL to be ready
        sleep 10

        docker compose exec postgres make installcheck
    - name: Cleanup
      if: always()
      run: docker compose down 