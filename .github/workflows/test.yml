name: Test

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        postgres: [12, 13, 14, 15, 16]
    
    services:
      postgres:
        image: postgres:${{ matrix.postgres }}
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install PostgreSQL client and dev tools
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client postgresql-server-dev-all
    
    - name: Build extension
      run: |
        export PG_CONFIG=/usr/bin/pg_config
        make clean
        make
      env:
        PGHOST: localhost
        PGPORT: 5432
        PGUSER: postgres
        PGPASSWORD: postgres
        PGDATABASE: postgres
    
    - name: Install extension
      run: |
        export PG_CONFIG=/usr/bin/pg_config
        sudo make install
      env:
        PGHOST: localhost
        PGPORT: 5432
        PGUSER: postgres
        PGPASSWORD: postgres
        PGDATABASE: postgres
    
    - name: Run tests
      run: |
        export PG_CONFIG=/usr/bin/pg_config
        make installcheck PGUSER=postgres PGHOST=localhost PGPORT=5432 PGDATABASE=postgres
      env:
        PGPASSWORD: postgres
    
    - name: Show test diff on failure
      if: failure()
      run: |
        if [ -f regression.diffs ]; then
          echo "=== Test failures ==="
          cat regression.diffs
        fi

  docker-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build and test with Docker
      run: |
        docker compose up -d --build
        docker compose exec -T postgres make test
    
    - name: Cleanup
      if: always()
      run: docker compose down 